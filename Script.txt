--SCRIPT

ALTER SESSION SET "_oracle_script"= true;
CREATE TABLESPACE CONDOMINIO DATAFILE
'C:\app\jacks\product\21c\oradata\XE\CONDOMINIO.DBF' SIZE 100M ONLINE;
CREATE TEMPORARY TABLESPACE CONDOMINIO_TMP TEMPFILE
'C:\app\jacks\product\21c\oradata\XE\CONDOMINIO_TMP.DBF' SIZE 25M AUTOEXTEND ON;

CREATE USER CONDOMINIO IDENTIFIED BY 251002
DEFAULT TABLESPACE CONDOMINIO
TEMPORARY TABLESPACE CONDOMINIO_TMP;
GRANT RESOURCE TO CONDOMINIO;
GRANT CONNECT TO CONDOMINIO;
GRANT ALL PRIVILEGES TO CONDOMINIO;



--------------------------------------------------------
--  DDL for Table ACCESOS
--------------------------------------------------------

  CREATE TABLE "CONDOMINIO"."ACCESOS" 
   (	"N_ACCESO" NUMBER(10,0), 
	"FECHA" DATE DEFAULT CURRENT_DATE, 
	"N_VISITANTE" VARCHAR2(20 BYTE), 
	"ID_VISITANTE" NUMBER(15,0), 
	"FILIAL" NUMBER(10,0), 
	"H_ENTRADA" VARCHAR2(50 BYTE), 
	"H_SALIDA" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CONDOMINIO" ;
--------------------------------------------------------
--  DDL for Table CUOTAS
--------------------------------------------------------

  CREATE TABLE "CONDOMINIO"."CUOTAS" 
   (	"ID_CUOTA" NUMBER(10,0), 
	"ID_DUENNO" NUMBER(15,0), 
	"FECHA" DATE DEFAULT CURRENT_DATE, 
	"MONTO" FLOAT(126), 
	"DESCRIPCION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CONDOMINIO" ;
--------------------------------------------------------
--  DDL for Table CUOTAS_EXTRAS
--------------------------------------------------------

  CREATE TABLE "CONDOMINIO"."CUOTAS_EXTRAS" 
   (	"ID_CUOTA_EX" NUMBER(10,0), 
	"ID_DUENNO" NUMBER(15,0), 
	"FECHA" DATE DEFAULT CURRENT_DATE, 
	"MONTO" FLOAT(126), 
	"DESCRIPCION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CONDOMINIO" ;
--------------------------------------------------------
--  DDL for Table DUENNOS
--------------------------------------------------------

  CREATE TABLE "CONDOMINIO"."DUENNOS" 
   (	"NOMBRE" VARCHAR2(20 BYTE), 
	"ID_DUENNO" NUMBER(15,0), 
	"APE1" VARCHAR2(20 BYTE), 
	"APE2" VARCHAR2(20 BYTE), 
	"TELEFONO" NUMBER(8,0), 
	"CORREO" VARCHAR2(25 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CONDOMINIO" ;
--------------------------------------------------------
--  DDL for Table FILIALES
--------------------------------------------------------

  CREATE TABLE "CONDOMINIO"."FILIALES" 
   (	"ID_FILIAL" NUMBER(10,0), 
	"ID_DUENNO" NUMBER(15,0), 
	"DESCRIPCION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CONDOMINIO" ;

--------------------------------------------------------
--  Ref Constraints for Table ACCESOS
--------------------------------------------------------

  ALTER TABLE "CONDOMINIO"."ACCESOS" ADD CONSTRAINT "FK_F_ACCESO" FOREIGN KEY ("FILIAL")
	  REFERENCES "CONDOMINIO"."FILIALES" ("ID_FILIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CUOTAS
--------------------------------------------------------

  ALTER TABLE "CONDOMINIO"."CUOTAS" ADD CONSTRAINT "FK_IDD_CUOTAS" FOREIGN KEY ("ID_DUENNO")
	  REFERENCES "CONDOMINIO"."DUENNOS" ("ID_DUENNO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CUOTAS_EXTRAS
--------------------------------------------------------

  ALTER TABLE "CONDOMINIO"."CUOTAS_EXTRAS" ADD CONSTRAINT "FK_IDD_CUOTAS_EX" FOREIGN KEY ("ID_DUENNO")
	  REFERENCES "CONDOMINIO"."DUENNOS" ("ID_DUENNO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FILIALES
--------------------------------------------------------

  ALTER TABLE "CONDOMINIO"."FILIALES" ADD CONSTRAINT "FK_F_DUENNO" FOREIGN KEY ("ID_DUENNO")
	  REFERENCES "CONDOMINIO"."DUENNOS" ("ID_DUENNO") ENABLE;

--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZAR_ACCESOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_ACTUALIZAR_ACCESOS" (CUR_N_ACCESO IN NUMBER, NEW_H_SALIDA IN VARCHAR2)
AS
--VARIABLES
BEGIN
    UPDATE CONDOMINIO.ACCESOS SET H_SALIDA = NEW_H_SALIDA 
    WHERE N_ACCESO = CUR_N_ACCESO;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_ACTUALIZAR_ACCESOS;

/

--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZAR_CUOTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_ACTUALIZAR_CUOTA" (CUR_ID IN CONDOMINIO.CUOTAS.ID_CUOTA%TYPE,
NEW_FECHA IN CONDOMINIO.CUOTAS.FECHA%TYPE, NEW_MONTO IN CONDOMINIO.CUOTAS.MONTO%TYPE, 
NEW_DESC IN CONDOMINIO.CUOTAS.DESCRIPCION%TYPE)
IS
--VARIABLES
BEGIN
    UPDATE CONDOMINIO.CUOTAS SET FECHA = NEW_FECHA, MONTO = NEW_MONTO, DESCRIPCION = NEW_DESC
    WHERE ID_CUOTA = CUR_ID;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_ACTUALIZAR_CUOTA;

/

--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZAR_CUOTAS_EXTRAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_ACTUALIZAR_CUOTAS_EXTRAS" (CUR_ID IN CONDOMINIO.CUOTAS_EXTRAS.ID_CUOTA_EX%TYPE, 
NEW_FECHA IN CONDOMINIO.CUOTAS_EXTRAS.FECHA%TYPE, 
NEW_MONTO IN CONDOMINIO.CUOTAS_EXTRAS.MONTO%TYPE, NEW_DESC IN CONDOMINIO.CUOTAS_EXTRAS.DESCRIPCION%TYPE)
IS
--VARIABLES
BEGIN
    UPDATE CONDOMINIO.CUOTAS_EXTRAS SET FECHA = NEW_FECHA, MONTO = NEW_MONTO, DESCRIPCION = NEW_DESC
    WHERE ID_CUOTA_EX = CUR_ID;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_ACTUALIZAR_CUOTAS_EXTRAS;

/

--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZAR_DUENNO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_ACTUALIZAR_DUENNO" (CUR_ID IN CONDOMINIO.DUENNOS.ID_DUENNO%TYPE, 
NEW_NOMBRE IN CONDOMINIO.DUENNOS.NOMBRE%TYPE, NEW_APE1 IN CONDOMINIO.DUENNOS.APE1%TYPE, 
NEW_APE2 IN CONDOMINIO.DUENNOS.APE2%TYPE, NEW_TELEFONO IN CONDOMINIO.DUENNOS.TELEFONO%TYPE,
NEW_CORREO IN CONDOMINIO.DUENNOS.CORREO%TYPE)
IS
--VARIABLES
BEGIN
    UPDATE CONDOMINIO.DUENNOS SET NOMBRE = NEW_NOMBRE, APE1 = NEW_APE1, 
    APE2 = NEW_APE2, TELEFONO = NEW_TELEFONO, CORREO = NEW_CORREO
    WHERE ID_DUENNO = CUR_ID;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_ACTUALIZAR_DUENNO;

/

--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZAR_FILIALES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_ACTUALIZAR_FILIALES" (CUR_ID IN CONDOMINIO.FILIALES.ID_FILIAL%TYPE, 
NEW_DESC IN CONDOMINIO.FILIALES.DESCRIPCION%TYPE, NEW_ID_DUENNO IN CONDOMINIO.FILIALES.ID_DUENNO%TYPE)
IS
--VARIABLES
BEGIN
    UPDATE CONDOMINIO.FILIALES SET DESCRIPCION = NEW_DESC, ID_DUENNO = NEW_ID_DUENNO
    WHERE ID_FILIAL = CUR_ID;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_ACTUALIZAR_FILIALES;

/

--------------------------------------------------------
--  DDL for Procedure SP_BORRAR_ACCESOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_BORRAR_ACCESOS" (CUR_N_ACCESO IN CONDOMINIO.ACCESOS.N_ACCESO%TYPE)
IS
--VARIABLES
BEGIN
    DELETE FROM CONDOMINIO.ACCESOS 
    WHERE N_ACCESO = CUR_N_ACCESO;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_BORRAR_ACCESOS;

/

--------------------------------------------------------
--  DDL for Procedure SP_BORRAR_CUOTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_BORRAR_CUOTA" (CUR_ID IN CONDOMINIO.CUOTAS.ID_CUOTA%TYPE)
IS
--VARIABLES
BEGIN
    DELETE FROM CONDOMINIO.CUOTAS 
    WHERE ID_CUOTA = CUR_ID;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_BORRAR_CUOTA;

/

--------------------------------------------------------
--  DDL for Procedure SP_BORRAR_CUOTAS_EXTRAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_BORRAR_CUOTAS_EXTRAS" (CUR_ID IN CONDOMINIO.CUOTAS_EXTRAS.ID_CUOTA_EX%TYPE)
IS
--VARIABLES
BEGIN
    DELETE FROM CONDOMINIO.CUOTAS_EXTRAS 
    WHERE ID_CUOTA_EX = CUR_ID;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_BORRAR_CUOTAS_EXTRAS;

/

--------------------------------------------------------
--  DDL for Procedure SP_BORRAR_DUENNO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_BORRAR_DUENNO" (CUR_ID IN CONDOMINIO.DUENNOS.ID_DUENNO%TYPE)
IS
--VARIABLES
BEGIN
    DELETE FROM CONDOMINIO.DUENNOS 
    WHERE ID_DUENNO = CUR_ID;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_BORRAR_DUENNO;

/

--------------------------------------------------------
--  DDL for Procedure SP_BORRAR_FILIALES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_BORRAR_FILIALES" (CUR_ID IN CONDOMINIO.FILIALES.ID_FILIAL%TYPE)
IS
--VARIABLES
BEGIN
    DELETE FROM CONDOMINIO.FILIALES 
    WHERE ID_FILIAL = CUR_ID;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_BORRAR_FILIALES;

/

--------------------------------------------------------
--  DDL for Procedure SP_INSERTAR_ACCESOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_INSERTAR_ACCESOS" (NEW_N_ACCESO IN CONDOMINIO.ACCESOS.N_ACCESO%TYPE
, NEW_N_VISITANTE IN CONDOMINIO.ACCESOS.N_VISITANTE%TYPE, NEW_ID_VISITANTE IN CONDOMINIO.ACCESOS.ID_VISITANTE%TYPE, NEW_FILIAL IN CONDOMINIO.ACCESOS.FILIAL%TYPE, NEW_H_ENTRADA IN CONDOMINIO.ACCESOS.H_ENTRADA%TYPE)
IS
--VARIABLES
BEGIN
    INSERT INTO CONDOMINIO.ACCESOS (N_ACCESO, N_VISITANTE, ID_VISITANTE, FILIAL, H_ENTRADA) 
    VALUES(NEW_N_ACCESO, NEW_N_VISITANTE, NEW_ID_VISITANTE, NEW_FILIAL, NEW_H_ENTRADA);
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_INSERTAR_ACCESOS;

/

--------------------------------------------------------
--  DDL for Procedure SP_INSERTAR_CUOTAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_INSERTAR_CUOTAS" (NEW_ID IN CONDOMINIO.CUOTAS.ID_CUOTA%TYPE,
NEW_ID_D IN CONDOMINIO.CUOTAS.ID_DUENNO%TYPE, NEW_MONTO IN CONDOMINIO.CUOTAS.MONTO%TYPE, NEW_DESC IN CONDOMINIO.CUOTAS.DESCRIPCION%TYPE)
IS
--VARIABLES
BEGIN
    INSERT INTO CONDOMINIO.CUOTAS (ID_CUOTA, ID_DUENNO, MONTO, DESCRIPCION) 
    VALUES(NEW_ID, NEW_ID_D, NEW_MONTO, NEW_DESC);
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_INSERTAR_CUOTAS;

/

--------------------------------------------------------
--  DDL for Procedure SP_INSERTAR_CUOTAS_EXTRAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_INSERTAR_CUOTAS_EXTRAS" (NEW_ID IN CONDOMINIO.CUOTAS_EXTRAS.ID_CUOTA_EX%TYPE,
NEW_ID_D IN CONDOMINIO.CUOTAS_EXTRAS.ID_DUENNO%TYPE, 
NEW_MONTO IN CONDOMINIO.CUOTAS_EXTRAS.MONTO%TYPE, NEW_DESC IN CONDOMINIO.CUOTAS_EXTRAS.DESCRIPCION%TYPE)
IS
--VARIABLES
BEGIN
    INSERT INTO CONDOMINIO.CUOTAS_EXTRAS (ID_CUOTA_EX, ID_DUENNO, MONTO, DESCRIPCION) 
    VALUES(NEW_ID, NEW_ID_D, NEW_MONTO, NEW_DESC);
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_INSERTAR_CUOTAS_EXTRAS;

/

--------------------------------------------------------
--  DDL for Procedure SP_INSERTAR_DUENNOS
--------------------------------------------------------

set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_INSERTAR_DUENNOS" (NEW_ID IN CONDOMINIO.DUENNOS.ID_DUENNO%TYPE,
NEW_NOMBRE IN CONDOMINIO.DUENNOS.NOMBRE%TYPE, NEW_APE1 IN CONDOMINIO.DUENNOS.APE1%TYPE, 
NEW_APE2 IN CONDOMINIO.DUENNOS.APE2%TYPE, NEW_TELEFONO IN CONDOMINIO.DUENNOS.TELEFONO%TYPE,
NEW_CORREO IN CONDOMINIO.DUENNOS.CORREO%TYPE)
IS
--VARIABLES
BEGIN
    INSERT INTO CONDOMINIO.DUENNOS (ID_DUENNO, NOMBRE, APE1, APE2, TELEFONO, CORREO) 
    VALUES(NEW_ID, NEW_NOMBRE, NEW_APE1, NEW_APE2, NEW_TELEFONO, NEW_CORREO);
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_INSERTAR_DUENNOS; 

/

--------------------------------------------------------
--  DDL for Procedure SP_INSERTAR_FILIALES
--------------------------------------------------------

set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CONDOMINIO"."SP_INSERTAR_FILIALES" (NEW_ID IN CONDOMINIO.FILIALES.ID_FILIAL%TYPE,
NEW_DESC IN CONDOMINIO.FILIALES.DESCRIPCION%TYPE, NEW_ID_DUENNO IN CONDOMINIO.FILIALES.ID_DUENNO%TYPE)
IS
--VARIABLES
BEGIN
    INSERT INTO CONDOMINIO.FILIALES (ID_FILIAL, DESCRIPCION, ID_DUENNO) 
    VALUES(NEW_ID, NEW_DESC, NEW_ID_DUENNO);
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END SP_INSERTAR_FILIALES; 

/

--------------------------------------------------------
--  DDL for Trigger CREAR_CUOTA_IMPUESTOS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "CONDOMINIO"."CREAR_CUOTA_IMPUESTOS" 
AFTER INSERT ON CONDOMINIO.CUOTAS
FOR
EACH ROW
    BEGIN
        INSERT INTO CONDOMINIO.CUOTAS_EXTRAS (ID_CUOTA_EX, ID_DUENNO, FECHA, MONTO, DESCRIPCION) 
        VALUES(:NEW.ID_CUOTA, :NEW.ID_DUENNO, :NEW.FECHA, :NEW.MONTO * 0.13, 'IMPUESTO POR CUOTA');
    END;

ALTER TRIGGER "CONDOMINIO"."CREAR_CUOTA_IMPUESTOS" ENABLE;

--------------------------------------------------------

/

--------------------------------------------------------
--  DDL for Procedure MOSTRAR_ACCESOS
--------------------------------------------------------

set define off;

  create or replace PROCEDURE MOSTRAR_ACCESOS 
( ID IN NUMBER, 
  p_cursor OUT NOCOPY SYS_REFCURSOR )
as begin
  open p_cursor for 
    SELECT FILIALES.DESCRIPCION, ACCESOS.N_VISITANTE, ACCESOS.FECHA, ACCESOS.H_ENTRADA, ACCESOS.H_SALIDA
FROM FILIALES 
JOIN ACCESOS ON FILIALES.ID_FILIAL = ACCESOS.FILIAL WHERE FILIALES.ID_FILIAL = ID;

end;

/

--CURSOR

SET SERVEROUTPUT ON; 

declare
  v_cursor SYS_REFCURSOR;
    DESCRIPCION VARCHAR2(50);
    N_VISITANTE VARCHAR2(20);
    H_ENTRADA VARCHAR2(50);
    FECHA DATE;
    H_SALIDA VARCHAR2(50);
begin
  Mostrar_Accesos(2, v_cursor );  --AQUI MANDA EL CURSOR
  loop
    fetch v_cursor into DESCRIPCION, N_VISITANTE, FECHA, 
      H_ENTRADA, H_SALIDA;
    exit when v_cursor%NOTFOUND;
    dbms_output.put_line(DESCRIPCION || ' | ' || N_VISITANTE
      || ' | ' || FECHA || ' | ' || H_ENTRADA || ' | ' || 
      H_SALIDA);
  end loop;
  close v_cursor;
end;

/


